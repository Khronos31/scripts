#!/bin/bash

ZWS0=$'\u200b'
ZWS1=$'\u200c'
ZWS2=$'\u200d'
ZWS3=$'\u2062'

ZWS_HEX=(
  $ZWS0$ZWS0
  $ZWS0$ZWS1
  $ZWS0$ZWS2
  $ZWS0$ZWS3
  $ZWS1$ZWS0
  $ZWS1$ZWS1
  $ZWS1$ZWS2
  $ZWS1$ZWS3
  $ZWS2$ZWS0
  $ZWS2$ZWS1
  $ZWS2$ZWS2
  $ZWS2$ZWS3
  $ZWS3$ZWS0
  $ZWS3$ZWS1
  $ZWS3$ZWS2
  $ZWS3$ZWS3
)

help(){
  echo "Usage: $0 [OPTION] [FILE]"
  echo "Zero width space encode or decode FILE, or standard input to standard output."
  echo "With no FILE, or when FILE is -, read standard input."
  echo "  -d : decode data"
  #echo "  -t : "
  echo "  -h : display this help and exit"
}


encode(){
  echo -n "'"
  cat "$1" |\
  xxd -p |\
  tr -d '\n' |\
  sed "
    s/0/${ZWS_HEX[0x0]}/g;
    s/1/${ZWS_HEX[0x1]}/g;
    s/2/${ZWS_HEX[0x2]}/g;
    s/3/${ZWS_HEX[0x3]}/g;
    s/4/${ZWS_HEX[0x4]}/g;
    s/5/${ZWS_HEX[0x5]}/g;
    s/6/${ZWS_HEX[0x6]}/g;
    s/7/${ZWS_HEX[0x7]}/g;
    s/8/${ZWS_HEX[0x8]}/g;
    s/9/${ZWS_HEX[0x9]}/g;
    s/a/${ZWS_HEX[0xa]}/g;
    s/b/${ZWS_HEX[0xb]}/g;
    s/c/${ZWS_HEX[0xc]}/g;
    s/d/${ZWS_HEX[0xd]}/g;
    s/e/${ZWS_HEX[0xe]}/g;
    s/f/${ZWS_HEX[0xf]}/g"
  echo "'"
}

decode(){
  cat "$1" |\
  sed "s/[^$ZWS0$ZWS1$ZWS2$ZWS3]//g" |\
  sed "s/../& /g" |\
  sed "
    s/${ZWS_HEX[0x0]}/0/g;
    s/${ZWS_HEX[0x1]}/1/g;
    s/${ZWS_HEX[0x2]}/2/g;
    s/${ZWS_HEX[0x3]}/3/g;
    s/${ZWS_HEX[0x4]}/4/g;
    s/${ZWS_HEX[0x5]}/5/g;
    s/${ZWS_HEX[0x6]}/6/g;
    s/${ZWS_HEX[0x7]}/7/g;
    s/${ZWS_HEX[0x8]}/8/g;
    s/${ZWS_HEX[0x9]}/9/g;
    s/${ZWS_HEX[0xa]}/a/g;
    s/${ZWS_HEX[0xb]}/b/g;
    s/${ZWS_HEX[0xc]}/c/g;
    s/${ZWS_HEX[0xd]}/d/g;
    s/${ZWS_HEX[0xe]}/e/g;
    s/${ZWS_HEX[0xf]}/f/g" |\
  tr -d ' ' |\
  xxd -p -r
}

MODE="ENCODE"
FILE="-"

for arg in $@;do
  case "$arg" in
    "-h"|"--help") help;exit 0;;
    "-d"|"--decode") MODE="DECODE";;
    *) FILE="$arg";;
  esac
done


if [ "$MODE" = "DECODE" ] ; then
  decode "$FILE"
else
  encode "$FILE"
fi

exit 0
